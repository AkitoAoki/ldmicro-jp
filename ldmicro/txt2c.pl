#!/usr/bin/perl

use strict;

print <<EOT;
// generated by txt2c.pl from $ARGV[0]
#include <stdlib.h>
EOT

my %manuals = map { /manual-?([^.]*)/ or die; (lc($1) || 'en') => $_ } glob('manual*txt');
my @languages_without_manual = grep { !exists $manuals{$_} } map { /-([^.]*)/ or die; lc $1 } glob('lang-*.txt');

for my $lang (sort keys %manuals) {
    my ($name, $ifdef);
    my $manual = $manuals{$lang};

    if ($lang eq 'en') {
        # Some languages don't have translated manuals yet, so use English
        my @langs = sort('en', @languages_without_manual);
        my $cond = join ' || ', map { "defined(LDLANG_$_)" } map { uc } @langs;
        
        $name = "HelpText";
        $ifdef = "#if $cond";
    } else {
        $name = "HelpText" . ucfirst $lang;
        $ifdef = "#ifdef LDLANG_" . uc $lang;
    }

    print <<EOT;
$ifdef
char *$name\[] = {
EOT

    open(IN, $manual) or die;
    while(<IN>) {
        chomp;
        # avoid problem with Japanese encoding (cp932) which has 0x5c in a multibyte character
        s/\\/\\\\/g if $lang ne 'ja';
        s/"/\\"/g;

        print qq{    "$_",\n};
    }
    close IN;

    print <<EOT;
    NULL
};
#endif

EOT

}
